@using miranaSolution.Admin.ViewModels.Common
@model miranaSolution.API.ViewModels.Books.ApiGetAllBookChaptersResponse

@{
    ViewData["title"] = "Chapters Of " + ViewBag.Book.Name;
}

@section LibResources
{
    <link href="https://cdn.jsdelivr.net/npm/simple-datatables@7.1.2/dist/style.min.css" rel="stylesheet"/>
}

@section Scripts
{
    <script src="https://cdn.jsdelivr.net/npm/simple-datatables@7.1.2/dist/umd/simple-datatables.min.js" crossorigin="anonymous"></script>
    <script src="~/js/datatables-simple-demo.js"></script>
}

<h1 class="mt-4">Chapters of @ViewBag.Book.Name</h1>
<div class="card mb-4">
    <div class="card-header">
        <a
            asp-action="AddChapter"
            asp-route-id="@ViewBag.Book.Id"
            class="btn btn-success">
            <i class="fa-solid fa-plus"></i> Create new chapter
        </a>

        <a
            asp-action="Index"
            class="btn btn-danger">
            Back
        </a>
    </div>
    <div class="card-body">
        <table id="datatablesSimple">
            <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Index</th>
                <th>Read Count</th>
                <th>Word Count</th>
                <th>Previous Index</th>
                <th>Next Index</th>
                <th></th>
            </tr>
            </thead>
            <tbody>
            @foreach (var chapter in Model.Chapters)
            {
                <tr>
                    <td>@chapter.Id</td>
                    <td>@chapter.Name</td>
                    <td>@chapter.Index</td>
                    <td>@chapter.ReadCount</td>
                    <td>@chapter.WordCount</td>
                    <th>@chapter.PreviousIndex</th>
                    <th>@chapter.NextIndex</th>
                    <td>
                        <div class="row-table-action">
                            <a asp-action="UpdateChapterPreviousIndex" 
                               asp-route-id="@chapter.BookId" 
                               asp-route-index="@chapter.Index" 
                               title="Update previous chapter">
                                <i class="fa-solid fa-arrow-left"></i>
                            </a>
                            
                            <a asp-action="UpdateChapterNextIndex"
                               asp-route-id="@chapter.BookId" 
                               asp-route-index="@chapter.Index" 
                               title="Update next chapter">
                                <i class="fa-solid fa-arrow-right"></i>
                            </a>
                            
                            <a asp-route-id="@chapter.BookId" asp-route-index="@chapter.Index" asp-action="UpdateChapter" title="Edit">
                                <i class="fa-solid fa-pen-to-square"></i>
                            </a>
                            
                            <form method="POST" asp-action="DeleteChapter" asp-route-id="@chapter.BookId">
                                <input type="hidden" value="@chapter.Index" name="index"/>
                                <button title="Delete" type="submit" class="p-0 text-danger bg-transparent border-0">
                                    <i class="fa-solid fa-trash"></i>
                                </button>
                            </form>
                        </div>
                        
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>

    <div class="card-body">
        @await Component.InvokeAsync("Pager", new PagerResult(
                   Model.PageIndex, Model.PageSize, Model.TotalPages))
    </div>
</div>