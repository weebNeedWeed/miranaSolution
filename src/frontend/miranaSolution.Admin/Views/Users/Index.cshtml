@model miranaSolution.API.ViewModels.Users.ApiGetAllUsersResponse
@using miranaSolution.DTOs.Common
@using miranaSolution.Admin.ViewModels.Common
@using System.Security.Claims
@using System.IdentityModel.Tokens.Jwt

@{
    ViewData["title"] = "Users";
}

@section LibResources
{
    <link href="https://cdn.jsdelivr.net/npm/simple-datatables@7.1.2/dist/style.min.css" rel="stylesheet"/>
}

@section Scripts
{
    <script src="https://cdn.jsdelivr.net/npm/simple-datatables@7.1.2/dist/umd/simple-datatables.min.js" crossorigin="anonymous"></script>
    <script src="~/js/datatables-simple-demo.js"></script>
}

<h1 class="mt-4">Users</h1>
<div class="card mb-4">
    <div class="card-header d-flex justify-content-between">
        <a asp-action="Create" class="btn btn-success"><i class="fa-solid fa-plus"></i> Create new</a>
    
        <form method="GET">
            <div class="input-group">
                <input name="keyword" class="form-control" type="text" placeholder="Search for..." aria-label="Search for..." aria-describedby="btnNavbarSearch"/>
                <button class="btn btn-primary" id="btnNavbarSearch" type="button">
                    <i class="fas fa-search"></i>
                </button>
            </div>
        </form>
    </div>
    <div class="card-body">
        <table id="datatablesSimple">
            <thead>
            <tr>
                <th>Id</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th>Username</th>
                <th></th>
            </tr>
            </thead>
            <tbody>
            @foreach (var user in Model.Users)
            {
                @if (user.UserName ==
                     User.Claims.FirstOrDefault(x => x.Type.Equals(JwtRegisteredClaimNames.Sub))!.Value)
                {
                    continue;
                }
                <tr>
                    <td>@user.Id</td>
                    <td>@user.FirstName</td>
                    <td>@user.LastName</td>
                    <td>@user.Email</td>
                    <td>@user.UserName</td>
                    <td>
                        <div class="row-table-action">
                            <a asp-route-id="@user.Id" asp-action="AssignRoles" title="Assign Roles">
                                <i class="fa-solid fa-layer-group"></i>
                            </a>
                            
                            <form asp-action="Delete" method="POST" asp-route-id="@user.Id">
                                <button title="Delete" type="submit" class="p-0 text-danger bg-transparent border-0">
                                    <i class="fa-solid fa-trash"></i>
                                </button>
                            </form>
                        </div>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>

    <div class="card-body">
        @await Component.InvokeAsync("Pager", new PagerResult(
                   Model.PageIndex, Model.PageSize, Model.TotalPages))
    </div>

</div>